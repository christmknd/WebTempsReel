version: "3.8"

services:
  backend:
    container_name: WTR_api
    image: wtr_express
    build:
      context: back/
    depends_on:
      - database
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - PORT_POSTGRES=${PORT_POSTGRES}
      - PORT_BACKEND=${PORT_BACKEND}
      - PORT_FRONTEND=${PORT_FRONTEND}
    ports:
      - ${PORT_BACKEND}:${PORT_BACKEND}
    volumes:
      - ./back/src:/app/src
    command: npm install && npm start

  frontend:
    container_name: WTR_web
    image: wtr_reactjs
    build:
      context: front/
    environment:
      - REACT_APP_API_BACK=${REACT_APP_API_BACK}
      - REACT_APP_WS_BACK=${REACT_APP_WS_BACK}
      - REACT_APP_PORT_BACKEND=${PORT_BACKEND}
    ports:
      - ${PORT_FRONTEND}:3000
    depends_on:
      - backend
    volumes:
      - ./front/src:/app/src
    command: npm start

  database:
    container_name: WTR_database
    image: "postgres:14-alpine"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - db-data:/var/lib/postgresql/data/

  pgadmin:
    container_name: WTR_pgadmin
    image: dpage/pgadmin4
    ports:
      - ${PORT_PGADMIN}:80
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    depends_on:
      - database

volumes:
  db-data:
    name: WTR_volume_bdd
